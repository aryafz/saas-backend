generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  SITE_OWNER
  OPERATOR
  USER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  sites     Site[]   @relation("OwnerSites")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Site {
  id        String   @id @default(uuid())
  name      String
  ownerId   String
  owner     User     @relation("OwnerSites", fields: [ownerId], references: [id])
  plans     SitePlan[]
  features  SiteFeature[]
  themes    SiteTheme[]
  payments  Payment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
}

model Plan {
  id        String        @id @default(uuid())
  name      String
  price     Float
  features  PlanFeature[]
  sites     SitePlan[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Feature {
  id        String        @id @default(uuid())
  name      String        @unique
  description String?
  plans     PlanFeature[]
  sites     SiteFeature[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlanFeature {
  planId    String
  featureId String
  plan      Plan     @relation(fields: [planId], references: [id])
  feature   Feature  @relation(fields: [featureId], references: [id])

  @@id([planId, featureId])
  @@index([featureId])
}

model SitePlan {
  id        String   @id @default(uuid())
  siteId    String
  planId    String
  site      Site     @relation(fields: [siteId], references: [id])
  plan      Plan     @relation(fields: [planId], references: [id])
  startDate DateTime @default(now())
  endDate   DateTime?
  isActive  Boolean  @default(true)

  @@index([siteId])
  @@index([planId])
}

model SiteFeature {
  id        String   @id @default(uuid())
  siteId    String
  featureId String
  site      Site     @relation(fields: [siteId], references: [id])
  feature   Feature  @relation(fields: [featureId], references: [id])
  enabledAt DateTime @default(now())

  @@index([siteId])
  @@index([featureId])
}

model Theme {
  id        String      @id @default(uuid())
  name      String
  description String?
  sites     SiteTheme[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model SiteTheme {
  id        String   @id @default(uuid())
  siteId    String
  themeId   String
  site      Site     @relation(fields: [siteId], references: [id])
  theme     Theme    @relation(fields: [themeId], references: [id])
  activatedAt DateTime @default(now())

  @@index([siteId])
  @@index([themeId])
}

model Payment {
  id        String   @id @default(uuid())
  siteId    String
  amount    Float
  currency  String   @default("USD")
  status    String
  site      Site     @relation(fields: [siteId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}
